name: Java CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: Build with Maven
        run: mvn -B clean compile
  
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: Run Tests
        run: mvn -B test
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: target/surefire-reports/*.xml
          
      - name: Generate JaCoCo Report
        run: mvn jacoco:report
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco/
  
  code_quality:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  security_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: OWASP Dependency Check
        run: mvn org.owasp:dependency-check-maven:check
        
      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html
  
  package:
    runs-on: ubuntu-latest
    needs: [code_quality, security_scan]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: Package Application
        run: mvn -B package -DskipTests
        
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: target/*.jar
  
  build_docker:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v3
      
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: application-jar
          path: target
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/java-cicd-demo:latest
            ${{ secrets.DOCKER_USERNAME }}/java-cicd-demo:${{ github.sha }}
  
  deploy_dev:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Development
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/java-cicd-demo:${{ github.sha }}
            docker stop java-cicd-demo-dev || true
            docker rm java-cicd-demo-dev || true
            docker run -d --name java-cicd-demo-dev -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/java-cicd-demo:${{ github.sha }}
  
  integration_test:
    runs-on: ubuntu-latest
    needs: deploy_dev
    steps:
      - name: Test Deployment
        run: |
          # Give the application a moment to start up
          sleep 10
          curl -f http://${{ secrets.DEV_HOST }}:8080/health || exit 1
  
  deploy_prod:
    runs-on: ubuntu-latest
    needs: integration_test
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://example.com
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Apply
        run: |
          cd terraform
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan